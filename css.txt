Three main pillars of writing HTML and CSS.
1.)Responsive design--> fluid layouts , media query, desktop first vs mobile first, correct units.
2.)Maintainable and Scalable code--> clean, easy to understand, growth, reusable, classes naming, organized file.
3.)Web performance-->Less image, compressed image, use of css processor, less http request.

Q) What happens to CSS when we load up a webpage?

When our webpage gets loaded in users machine, then firstly HTML gets loaded up and then it is being parsed. After this parsing the browser stores the parsed HTML in node form that is represented as Document Object Model (DOM).
Also during this parsing browser load CSS and CSS is also get parsed.
The parsing of css is more complex than HTML, it involves two steps 
a)Resolves conflicting CSS declarations (cascade) 
b)Process final CSS values.
And then the final CSS is also stored like DOM called as CSS Object MOdel(CSSOM).
Then both the parsed CSS and HTML then comes to the render tree in order to render the page.
For website rendering the visual formatting model happens and then the final render of the website take place.

How CSS is parsed?

The cascade and specificity ?
The cascade (The "C" in CSS)--> Process of combining different stylesheets and resolving conflicts between CSS rules and declarations, when more than one rule applies to a certain element.
Cascade can be applied using by :
the author (developer)
user 
the browser(by user agent)---> a, ul,.. these tag have some default css.

Importance  > Specificity  > Source order

First same importance is checked then same specificity is checked and then last declaration in the code will override all the other declaration and will be applied
Importance
User !important declarations
Author !important declarations
Author declarations
User declaration
Default browser declarations.

Specificity
Inline styles
IDs
Classes, pseudo-classes, attribute
Elements, pseudo-elements

Key points:
.)CSS declaration marked with ! important have the highest priority.
.) But, only use important as a last resource. Its better to use correct specificity-- for more maintainable code!
.)Inline styles will always have priority over styles in external stylesheets.
.)A selector that contains 1 ID is more specific than one with 1000 classes;
.)A selector that contains 1 class is more specific than one with 1000 element;
.)The universal selector * has no specificity value (0,0,0,0);
.) Rely more on specificity than on the order of selectors;

.) How CSS is being parsed : How CSS values are processed?


